/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.javaswing.view;

import com.javaswing.model.Kho;
import com.javaswing.service.KhoService;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phamn
 */
public class ListKhoFrame extends javax.swing.JFrame {
    KhoService khoService;
    Kho kho;
    DefaultTableModel defaultTableModel;
    
    public ListKhoFrame() {
        initComponents();
        
        setLocation(380, 160);
        
        kho = new Kho();
        khoService = new KhoService();
        defaultTableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        listKhoTable.setModel(defaultTableModel);
        
        defaultTableModel.addColumn("Ma Kho");
        defaultTableModel.addColumn("Ten Kho");
        defaultTableModel.addColumn("Dia Chi");
        defaultTableModel.addColumn("Ma CN");
        
        List<Kho> list = new ArrayList<>();
        list = khoService.getAllKho();
        
        for (Kho kho : list) {
            defaultTableModel.addRow(new Object[]{kho.getMaKho(), kho.getTenKho(),
                kho.getDiaChi(), kho.getMaCN()});
        }
    }
    
    public void fillTable(){
        defaultTableModel.setRowCount(0); // Xoa het du lieu trong bang hien tai
        
        List<Kho> list = khoService.getAllKho();

        for(Kho kho : list){
            defaultTableModel.addRow(new Object[]{kho.getMaKho(), kho.getTenKho(),
                kho.getDiaChi(), kho.getMaCN()});
        }       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listKhoTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        maKhoTextField = new javax.swing.JTextField();
        tenKhoTextField = new javax.swing.JTextField();
        diachiTextField = new javax.swing.JTextField();
        cnComboBox = new javax.swing.JComboBox<>();
        filterButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        listKhoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        listKhoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listKhoTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listKhoTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("QUAN LY KHO");

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Ma Kho :");

        jLabel3.setText("Ten Kho :");

        jLabel4.setText("Dia Chi : ");

        jLabel5.setText("Ma CN :");

        diachiTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diachiTextFieldActionPerformed(evt);
            }
        });

        cnComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam Dinh", "Hai Phong", "Vinh Phuc", "Da Nang", "HCM", "Thai Binh" }));
        cnComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnComboBoxActionPerformed(evt);
            }
        });

        filterButton.setText("Loc");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        addButton.setText("Them Moi");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Cap Nhap");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Xoa");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(backButton)
                                .addGap(16, 16, 16))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addButton)
                                .addGap(34, 34, 34)
                                .addComponent(updateButton)
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(89, 89, 89)
                                        .addComponent(refreshButton))
                                    .addComponent(deleteButton))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maKhoTextField)
                    .addComponent(tenKhoTextField))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(filterButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(diachiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(maKhoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diachiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(tenKhoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(updateButton)
                    .addComponent(refreshButton)
                    .addComponent(deleteButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        new MenuManage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void diachiTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diachiTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diachiTextFieldActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        defaultTableModel.setRowCount(0);
        List<Kho> list = new ArrayList<>();
        
        list = khoService.getAllKho();
        int selected = cnComboBox.getSelectedIndex() + 1;
        
        for (Kho kho : list) {
            if(kho.getMaCN() == selected){
                defaultTableModel.addRow(new Object[]{kho.getMaKho(), kho.getTenKho(),
                    kho.getDiaChi(), kho.getMaCN()});
            }
        }
        
    }//GEN-LAST:event_filterButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        StringBuilder sb = new StringBuilder();
        if(maKhoTextField.getText().equals("")){
            sb.append("Ma kho khong duoc de trong! \n");
            maKhoTextField.setBackground(Color.red);
        } else {
            maKhoTextField.setBackground(Color.white);
        }
        if(tenKhoTextField.getText().equals("")){
            sb.append("Ten kho khong duoc de trong! \n");
            tenKhoTextField.setBackground(Color.red);
        } else {
            tenKhoTextField.setBackground(Color.white);
        }
        if(diachiTextField.getText().equals("")){
            sb.append("Dia chi cua kho khong duoc de trong! \n");
            diachiTextField.setBackground(Color.red);
        } else {
            diachiTextField.setBackground(Color.white);
        }
        
        if(sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb.toString(), "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        kho.setMaKho(Integer.parseInt(maKhoTextField.getText()));
        kho.setTenKho(tenKhoTextField.getText());
        kho.setDiaChi(diachiTextField.getText());
        int selectedMaCN = cnComboBox.getSelectedIndex() + 1;
        kho.setMaCN(selectedMaCN);
        
        khoService.addKho(kho);
        
        fillTable();
    }//GEN-LAST:event_addButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        StringBuilder sb = new StringBuilder();
        if(maKhoTextField.getText().equals("")){
            sb.append("Ma kho khong duoc de trong! \n");
            maKhoTextField.setBackground(Color.red);
        } else {
            maKhoTextField.setBackground(Color.white);
        }
        if(tenKhoTextField.getText().equals("")){
            sb.append("Ten kho khong duoc de trong! \n");
            tenKhoTextField.setBackground(Color.red);
        } else {
            tenKhoTextField.setBackground(Color.white);
        }
        if(diachiTextField.getText().equals("")){
            sb.append("Dia chi cua kho khong duoc de trong! \n");
            diachiTextField.setBackground(Color.red);
        } else {
            diachiTextField.setBackground(Color.white);
        }
        
        if(sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb.toString(), "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        List<Kho> list = new ArrayList<>();
        list = khoService.getAllKho();
        kho = new Kho();
        int tempt = Integer.parseInt(maKhoTextField.getText());
        
        for (Kho k : list) {
            if(k.getMaKho() == tempt){
                kho.setMaKho(Integer.parseInt(maKhoTextField.getText()));
                kho.setTenKho(tenKhoTextField.getText());
                kho.setDiaChi(diachiTextField.getText());
                kho.setMaCN(cnComboBox.getSelectedIndex() + 1);
                break;
            }
        }
        khoService.updateKho(kho);
        fillTable();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        maKhoTextField.setText("");
        tenKhoTextField.setText("");
        diachiTextField.setText("");
        cnComboBox.setSelectedIndex(0);
        
        fillTable();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        List<Kho> list = khoService.getAllKho();
        int selectedRow = listKhoTable.getSelectedRow();
        if(selectedRow >= 0){
            int maKho = (int) listKhoTable.getValueAt(selectedRow, 0);
            for (Kho kho : list) {
                if(maKho == kho.getMaKho()){
                    khoService.deleteKho(kho);
                    break;
                }
            }
        }
        
        fillTable();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void cnComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnComboBoxActionPerformed

    private void listKhoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listKhoTableMouseClicked
        List<Kho> list = new ArrayList<>();
        list = khoService.getAllKho();
        int selectedRow = listKhoTable.getSelectedRow();
        if(selectedRow >= 0){
            int maKho = (int) listKhoTable.getValueAt(selectedRow, 0);
            
            for (Kho kho : list) {
                if(maKho == kho.getMaKho()){
                    maKhoTextField.setText("" + kho.getMaKho());
                    tenKhoTextField.setText(kho.getTenKho());
                    diachiTextField.setText(kho.getDiaChi());
                    
                    if(kho.getMaCN() == 1){
                        cnComboBox.setSelectedIndex(0);
                    }
                    else if(kho.getMaCN() == 2){
                        cnComboBox.setSelectedIndex(1);
                    }
                    else if(kho.getMaCN() == 3){
                        cnComboBox.setSelectedIndex(2);
                    }
                    else if(kho.getMaCN() == 4){
                        cnComboBox.setSelectedIndex(3);
                    }
                    else if(kho.getMaCN() == 5){
                        cnComboBox.setSelectedIndex(4);
                    }
                    else if(kho.getMaCN() == 6){
                        cnComboBox.setSelectedIndex(5);
                    }
                    
                    break;
                }
            }
        }
    }//GEN-LAST:event_listKhoTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListKhoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListKhoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListKhoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListKhoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListKhoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> cnComboBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField diachiTextField;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable listKhoTable;
    private javax.swing.JTextField maKhoTextField;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField tenKhoTextField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
